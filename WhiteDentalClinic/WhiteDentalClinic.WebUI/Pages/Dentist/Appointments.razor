@attribute [Route(Routes.ProfileAppointments)]
@inject HttpClient Http
@using System.Text.Json
@using System.Text.Json.Serialization
@using WhiteDentalClinic.Shared.Models

<h3>My Appointments</h3>


@*<EditForm class="d-flex flex-column align-items-center">
    <InputText @bind-Value="@dentistRequestId" />

    <button type="submit" class="btn btn-primary">See appointments:</button>
</EditForm>*@

@if (appointmentsByUser == null)
{
    <p><em>No dentist appointments found.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Appointment ID</th>
                <th>Date time</th>
                <th>Customer ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var app in appointmentsByUser)
            {
                <tr>
                    <td>@app.Id</td>
                    <td>@app.dateTime</td>
                    <td>@app.CustomerId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AppointmentResponse> appointmentsByUser = new List<AppointmentResponse>();

    protected override async Task OnInitializedAsync()
    {
        Guid currentRequestId = Guid.Parse("c210cc12-7484-41b9-96da-834d2faf3aa2");    //by default an ID but need to be modify (Dentist / Customer!)
        try
        {
            var temp = await Http.GetFromJsonAsync<ApiResult<IEnumerable<AppointmentResponse>>>($"/api/Appointment/allapp/customer{currentRequestId}");
            appointmentsByUser = temp.Result.ToList();
        }
        catch (Exception ex)
        {
            //var temp = await Http.GetFromJsonAsync<ApiResult<IEnumerable<AppointmentResponse>>>($"/api/Appointment/allapp/dentist{currentRequestId}");
            //appointmentsByUser = temp.Result.ToList();
        }
    }
}