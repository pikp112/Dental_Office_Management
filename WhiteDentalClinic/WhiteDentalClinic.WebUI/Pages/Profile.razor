@attribute [Route(Routes.Profile)]
@using System.ComponentModel.DataAnnotations;
@using WhiteDentalClinic.Shared.Models;
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime

@if (currentProfile == null)
{
    <p><em>No profile found.</em></p>
}
else
{
    <section class="bg-light">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 mb-4 mb-sm-5">
                    <div class="card card-style1 border-0">
                        <div class="card-body p-1-9 p-sm-2-3 p-md-6 p-lg-7">
                            <div class="row align-items-center">
                                <div class="col-lg-6 mb-4 mb-lg-0">
                                    <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="...">
                                </div>
                                <div class="col-lg-6 px-xl-10">
                                    <div class="text-center">
                                        <h3 class="h2 text-black mb-0">@currentProfile.FirstName @currentProfile.LastName</h3>
                                    </div>
                                    <ul class="list-unstyled mb-1-9">
                                        <li class="mb-2 mb-xl-3 display-28"><span class="display-26 text-secondary me-2 font-weight-600"></span></li>
                                        <!--if is a customer show customer....else dentist (will be)-->
                                        <li class="mb-2 mb-xl-3 display-28"><span class="display-26 text-secondary me-2 font-weight-600">Position:</span> Customer</li>
                                        @if (IsTaskRunning == true)
                                        {
                                        <li class="mb-2 mb-xl-3 display-28"><span class="display-26 text-secondary me-2 font-weight-600">Firstname:</span>
                                                <input class="form-control" value="@currentProfile.FirstName" @oninput="HandleFirstName" />
                                            </li>
                                            <li class="mb-2 mb-xl-3 display-28">
                                                <span class="display-26 text-secondary me-2 font-weight-600">Lastname:</span>
                                                <input class="form-control" value="@currentProfile.LastName" @oninput="HandleLastName" />
                                            </li>

                                        }
                                        <li class="mb-2 mb-xl-3 display-28"><span class="display-26 text-secondary me-2 font-weight-600">Age:</span>
                                            @if (IsTaskRunning == false)
                                            {
                                                @currentProfile.Age
                                            }
                                            else
                                            {
                                                <input class="form-control" value="@currentProfile.Age" @oninput="HandleAge" />
                                            }
                                            </li>
                                        <li class="mb-2 mb-xl-3 display-28"><span class="display-26 text-secondary me-2 font-weight-600">Email:</span>
                                            @if (IsTaskRunning==false)
                                            {
                                                @currentProfile.Email
                                            }
                                            else
                                            {
                                                <input class="form-control" value="@currentProfile.Email" @oninput="HandleEmail"/>
                                            }
                                        </li>
                                        <li class="display-28"><span class="display-26 text-secondary me-2 font-weight-600">Phone:</span> 0758956148</li>
                                    </ul>
                                    <div class="row pt-1">
                                        <div class="col-6 mb-3">
                                            <h6>   Edit</h6>
                                            <button id="changeButton" class="btn btn-primary" disabled=@IsTaskRunning @onclick="Clicked"> @ButtonName</button>
                                        </div>
                                        <div class="col-6 mb-3">
                                            <h6>Appointments</h6>
                                            <button @onclick="@(() => {NavManager.NavigateTo(Routes.ProfileAppointments);})" class="btn btn-primary">
                                                Click here
                                            </button>
                                        </div>
                                    </div>

                                    <ul class="social-icon-style1 list-unstyled mb-0 ps-0">
                                        <MudIcon Icon="@Icons.Custom.Brands.GitHub" Title="GitHub" />
                                        <MudIcon Icon="@Icons.Custom.Brands.Google" Title="Google" />
                                        <MudIcon Icon="@Icons.Custom.Brands.Reddit" Title="Reddit" />
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12 mb-4 mb-sm-5">
                    <div>
                        <span class="section-title text-primary mb-3 mb-sm-4">About Me</span>
                        <p>@currentProfile.FirstName @currentProfile.LastName necessitatibus eius consequatur ex aliquid fuga eum quidem. Sit sint consectetur velit. Quisquam quos quisquam cupiditate. Et nemo qui impedit suscipit alias ea. Quia fugiat sit in iste officiis commodi quidem hic quas.</p>
                        <p class="mb-0">Clita ipsum magna kasd rebum at ipsum amet dolor justo dolor est magna stet eirmod. Voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi.</p>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-12 mb-4 mb-sm-5">
                            <div>
                                <span class="section-title text-primary mb-3 mb-sm-4">Education</span>
                                <p>Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.</p>
                                <p class="mb-1-9">There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour.</p>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}


@code {
    private ProfileResponse currentProfile = null;

    protected override async Task OnInitializedAsync()
    {
        Guid currentRequestId = Guid.Parse("9665bfd7-d60b-4557-b44e-80459d8c8e97");    //by default an ID but need to be modify (CUSTOMER/DENTIST)
        try
        {
            var temp = await Http.GetFromJsonAsync<ApiResult<ProfileResponse>>($"/api/Customers/{currentRequestId}");
            this.currentProfile = temp.Result;
        }
        catch (Exception ex)
        {
            //var temp = await Http.GetFromJsonAsync<ApiResult<ProfileResponse>>($"/api/Dentists/{currentRequestId}");       !!!!!!!!!!!!!
            //this.currentProfile = temp.Result;                                !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        }
    }

    //button Enable
    bool IsTaskRunning = false;
    string ButtonName = "Click Me";
    async void Clicked()
    {
        IsTaskRunning = true;
        ButtonName = "Disabled";
        await OnButtonClick();

        //IsTaskRunning = false; this to enable the button after the button click function executed
        StateHasChanged();
    }

    Task OnButtonClick()
    {
        //here can perform buton click function
        return Task.Delay(6000);
    }

    //new Email
    [Required(AllowEmptyStrings = false, ErrorMessage = "Wrong email")]
    [EmailAddress(ErrorMessage = "Invalid Email Address")]
    public string newEmail { get; set; }

    private EditContext editContext;

    public async Task HandleEmail()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?"); // Confirm
        if (confirmed)
        {
            var request = await Http.PutAsJsonAsync("/api/Customers", newEmail);
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);

        }
        else
        {
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);
        }
    }
    public async Task HandleAge()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?"); // Confirm
        if (confirmed)
        {
            var request = await Http.PutAsJsonAsync("/api/Customers", newEmail);
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);

        }
        else
        {
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);
        }
    }
    public async Task HandleFirstName()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?"); // Confirm
        if (confirmed)
        {
            var request = await Http.PutAsJsonAsync("/api/Customers", newEmail);
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);

        }
        else
        {
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);
        }
    }
    public async Task HandleLastName()
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?"); // Confirm
        if (confirmed)
        {
            var request = await Http.PutAsJsonAsync("/api/Customers", newEmail);
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);

        }
        else
        {
            Thread.Sleep(1000);
            NavManager.NavigateTo(Routes.Index);
        }
    }
}